# Set server port
server.port=8080
file.upload-dir=src/main/resources/static/images


spring.application.name=backend

# Database Configuration
# spring.datasource.url=jdbc:postgresql://dpg-cp7irum3e1ms73alcq40-a.oregon-postgres.render.com:5432/ecommerce_a3qh
# spring.datasource.username=ecommerce_a3qh_user
# spring.datasource.password=J7YKQTDk3cuzziCyg6PDKVUjtjKX0jj0

spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce
spring.datasource.username=postgres
spring.datasource.password=123

spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

# Hibernate configuration
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use UUID as primary key generator
spring.jpa.properties.hibernate.id.uuid.generator=org.hibernate.id.UUIDGenerator

spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=Content-Type,Authorization
spring.mvc.cors.allow-credentials=true
